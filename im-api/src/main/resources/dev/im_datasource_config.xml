<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
	 	 http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<context:component-scan base-package="com.qbao.im.api.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>

     <bean id="im_db1" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.im1.url}" />
		<property name="driverClassName" value="${jdbc.im.read.driver}"/>
		<property name="username" value="${jdbc.im1.username}" />
		<property name="password" value="${jdbc.im1.password}" />

		<property name="filters" value="stat,slf4j,wall" />
		<property name="maxActive" value="${jdbc.im.max_active}" />
		<property name="initialSize" value="${jdbc.im.initial_size}" />
		<property name="maxWait" value="${jdbc.im.max_wait}" />
		<property name="minIdle" value="${jdbc.im.min_idle}" />

		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
	</bean>

	<bean id="im_db2" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.im2.url}" />
		<property name="driverClassName" value="${jdbc.im.read.driver}"/>
		<property name="username" value="${jdbc.im2.username}" />
		<property name="password" value="${jdbc.im2.password}" />

		<property name="filters" value="stat,slf4j,wall" />
		<property name="maxActive" value="${jdbc.im.max_active}" />
		<property name="initialSize" value="${jdbc.im.initial_size}" />
		<property name="maxWait" value="${jdbc.im.max_wait}" />
		<property name="minIdle" value="${jdbc.im.min_idle}" />

		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
	</bean>

	<bean id="im_db3" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.im3.url}" />
		<property name="driverClassName" value="${jdbc.im.read.driver}"/>
		<property name="username" value="${jdbc.im3.username}" />
		<property name="password" value="${jdbc.im3.password}" />

		<property name="filters" value="stat,slf4j,wall" />
		<property name="maxActive" value="${jdbc.im.max_active}" />
		<property name="initialSize" value="${jdbc.im.initial_size}" />
		<property name="maxWait" value="${jdbc.im.max_wait}" />
		<property name="minIdle" value="${jdbc.im.min_idle}" />

		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
	</bean>

	<bean id="im_db4" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.im4.url}" />
		<property name="driverClassName" value="${jdbc.im.read.driver}"/>
		<property name="username" value="${jdbc.im4.username}" />
		<property name="password" value="${jdbc.im4.password}" />

		<property name="filters" value="stat,slf4j,wall" />
		<property name="maxActive" value="${jdbc.im.max_active}" />
		<property name="initialSize" value="${jdbc.im.initial_size}" />
		<property name="maxWait" value="${jdbc.im.max_wait}" />
		<property name="minIdle" value="${jdbc.im.min_idle}" />

		<property name="timeBetweenEvictionRunsMillis" value="3000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="logAbandoned" value="true" />
	</bean>

	<!-- 好友列表库 -->
	<bean id="dataSourceKeyHashRule1" class="com.qianbao.framework.datasource.impl.rules.DataSourceKeyModuloRule">
		<property name="field" value="userId"/>
		<property name="moduloNumber" value="4"/>
		<property name="remainder" value="0"/>
		<property name="dataSourceKey" value="im_db1"/>
	</bean>

	<bean id="dataSourceKeyHashRule2" class="com.qianbao.framework.datasource.impl.rules.DataSourceKeyModuloRule">
		<property name="field" value="userId"/>
		<property name="moduloNumber" value="4"/>
		<property name="remainder" value="1"/>
		<property name="dataSourceKey" value="im_db2"/>
	</bean>

	<bean id="dataSourceKeyHashRule3" class="com.qianbao.framework.datasource.impl.rules.DataSourceKeyModuloRule">
		<property name="field" value="userId"/>
		<property name="moduloNumber" value="4"/>
		<property name="remainder" value="2"/>
		<property name="dataSourceKey" value="im_db3"/>
	</bean>

	<bean id="dataSourceKeyHashRule4" class="com.qianbao.framework.datasource.impl.rules.DataSourceKeyModuloRule">
		<property name="field" value="userId"/>
		<property name="moduloNumber" value="4"/>
		<property name="remainder" value="3"/>
		<property name="dataSourceKey" value="im_db4"/>
	</bean>

	<bean id="defaultDataSourceKeyDeterminer" class="com.qianbao.framework.datasource.impl.DefaultDataSourceKeyDeterminer">
		<property name="defaultDataSourceKey" value="im_db1"/>
		<property name="rules">
			<list>
				<ref bean="dataSourceKeyHashRule1"/>
				<ref bean="dataSourceKeyHashRule2"/>
				<ref bean="dataSourceKeyHashRule3"/>
				<ref bean="dataSourceKeyHashRule4"/>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.qianbao.framework.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="im_db1" value-ref="im_db1"/>
				<entry key="im_db2" value-ref="im_db2"/>
				<entry key="im_db3" value-ref="im_db3"/>
				<entry key="im_db4" value-ref="im_db4"/>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="im_db1"/>
	</bean>

	<aop:aspectj-autoproxy proxy-target-class="true"/>

	<bean id="multipleDataSourceAspect" class="com.qianbao.framework.datasource.DataSourceAspect" />

	<aop:config>
		<aop:aspect id="c" ref="multipleDataSourceAspect">
			<aop:pointcut id="tx" expression="execution(* com.qbao.im.api.service.impl.*.*(..))"/>
			<aop:before pointcut-ref="tx" method="before"/>
			<aop:after pointcut-ref="tx" method="after"/>
		</aop:aspect>
	</aop:config>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">	
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis/mybatis_cfg.xml" />
		<property name="mapperLocations" value="classpath:/mybatis/mapper/**/*.xml" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.qbao.im.api.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>